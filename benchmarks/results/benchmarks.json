{
    "benchmarks.ColorSuite.time_downgrade_to_eight_bit": {
        "code": "class ColorSuite:\n    def time_downgrade_to_eight_bit(self):\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_eight_bit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9da5ad0b5cfed4def0fe21fbea49ad4605f84bae78c584d9178a6b21be58d506",
        "warmup_time": -1
    },
    "benchmarks.ColorSuite.time_downgrade_to_standard": {
        "code": "class ColorSuite:\n    def time_downgrade_to_standard(self):\n        self.color.downgrade(ColorSystem.STANDARD)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_standard",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "431bf40cae6650c65cdc6da70528f559c2e902abe9370cb73780dac5b5ef6826",
        "warmup_time": -1
    },
    "benchmarks.ColorSuite.time_downgrade_to_windows": {
        "code": "class ColorSuite:\n    def time_downgrade_to_windows(self):\n        self.color.downgrade(ColorSystem.WINDOWS)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuite.time_downgrade_to_windows",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "fef8d3fdb69ece95d49b5637f9d69760e29819d2d6e65e53e62356fec2e11b91",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_eight_bit": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_eight_bit(self):\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_eight_bit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "5fdae4522a081f8212ac2d43d69bbc86b73876c4222f6ea36a80970afe663579",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_standard": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_standard(self):\n        self.color.downgrade(ColorSystem.STANDARD)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_standard",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3806eb6f32fcfc22ff57b23b1d09e25fc82c35a97183e285d257fb2e2b464f8f",
        "warmup_time": -1
    },
    "benchmarks.ColorSuiteCached.time_downgrade_to_windows": {
        "code": "class ColorSuiteCached:\n    def time_downgrade_to_windows(self):\n        self.color.downgrade(ColorSystem.WINDOWS)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )\n        self.color = Color.parse(\"#0d1da0\")\n        # Warm cache\n        self.color.downgrade(ColorSystem.EIGHT_BIT)\n        self.color.downgrade(ColorSystem.STANDARD)\n        self.color.downgrade(ColorSystem.WINDOWS)",
        "min_run_count": 2,
        "name": "benchmarks.ColorSuiteCached.time_downgrade_to_windows",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2844899e3d81f71bd0b997401e1d300394b3ca130a056eb6b9aaca15ef07f39d",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty": {
        "code": "class PrettySuite:\n    def time_pretty(self):\n        pretty = Pretty(snippets.PYTHON_DICT)\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "12ef039b78ab19f0024f810fc30791bfe497731139b30a8c8ea7aef36ef9fed2",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty_indent_guides": {
        "code": "class PrettySuite:\n    def time_pretty_indent_guides(self):\n        pretty = Pretty(snippets.PYTHON_DICT, indent_guides=True)\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty_indent_guides",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "27d39951a834104a09759cd0c9b1efe8570946400d606a04baad7b0e2355a259",
        "warmup_time": -1
    },
    "benchmarks.PrettySuite.time_pretty_justify_center": {
        "code": "class PrettySuite:\n    def time_pretty_justify_center(self):\n        pretty = Pretty(snippets.PYTHON_DICT, justify=\"center\")\n        self.console.print(pretty)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.PrettySuite.time_pretty_justify_center",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "51fe6d435fa7bcd605b26131da960edffb88929baa7aca98c9b3f7b23364cb6f",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_ansi": {
        "code": "class StyleSuite:\n    def time_parse_ansi(self):\n        Style.parse(\"red on blue\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_ansi",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "30751ae63d82770f620ab5f807faf7437a5a7f2309db0c6403adb23ce9571ee5",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_hex": {
        "code": "class StyleSuite:\n    def time_parse_hex(self):\n        Style.parse(\"#f0f0f0 on #e2e28a\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_hex",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4d64f24e35306bc59f161cfd8e9542f1f76521ac58951af3841fba1722a9917b",
        "warmup_time": -1
    },
    "benchmarks.StyleSuite.time_parse_mixed_complex_style": {
        "code": "class StyleSuite:\n    def time_parse_mixed_complex_style(self):\n        Style.parse(\"dim bold reverse #00ee00 on rgb(123,12,50)\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False, width=100\n        )",
        "min_run_count": 2,
        "name": "benchmarks.StyleSuite.time_parse_mixed_complex_style",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9a9eff6e02c4c05312809b98da8d740a48c93f8718ff7ba74cfec9e3f956dbd8",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_heavy_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_thin_terminal_heavy_wrapping(self):\n        self._print_with_width(20)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_heavy_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "bcf6771787d6f643c3a02ed76b9045b8c773101dd7d307f989596e535a1dc8fa",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_medium_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_thin_terminal_medium_wrapping(self):\n        self._print_with_width(60)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_thin_terminal_medium_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "df349deebd0cb3fe2602808efb2cc95270bdd3ff3734e07c13348039c5385ff9",
        "warmup_time": -1
    },
    "benchmarks.SyntaxWrappingSuite.time_text_wide_terminal_no_wrapping": {
        "code": "class SyntaxWrappingSuite:\n    def time_text_wide_terminal_no_wrapping(self):\n        self._print_with_width(100)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.syntax = Syntax(\n            code=snippets.PYTHON_SNIPPET, lexer=\"python\", word_wrap=True\n        )",
        "min_run_count": 2,
        "name": "benchmarks.SyntaxWrappingSuite.time_text_wide_terminal_no_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0af0a4fdbcad1978765c9980b246270adec7d7917b7fb7ce9f544a55892503c2",
        "warmup_time": -1
    },
    "benchmarks.TableSuite.time_table_heavy_wrapping": {
        "code": "class TableSuite:\n    def time_table_heavy_wrapping(self):\n        self._print_table(width=30)",
        "min_run_count": 2,
        "name": "benchmarks.TableSuite.time_table_heavy_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "ca515a9739c1e0f8eb922420f9f9caf27321fb13c8bd0bc49b207a0588b370de",
        "warmup_time": -1
    },
    "benchmarks.TableSuite.time_table_no_wrapping": {
        "code": "class TableSuite:\n    def time_table_no_wrapping(self):\n        self._print_table(width=100)",
        "min_run_count": 2,
        "name": "benchmarks.TableSuite.time_table_no_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "8842a5f141d8208ba2bab66e4973e978cb5d0615f326af5d70385ff8fa44b3b9",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_align_center": {
        "code": "class TextSuite:\n    def time_align_center(self):\n        Text(snippets.LOREM_IPSUM).align(\"center\", width=self.len_lorem_ipsum * 3)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_align_center",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "f51eebb0dd72719da589ba30bbd85be25adf556231f15da3b8694499bb5b124f",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_align_center_unicode_heavy": {
        "code": "class TextSuite:\n    def time_align_center_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).align(\n            \"center\", width=self.len_lorem_ipsum * 3\n        )\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_align_center_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "6f157a0bd86b9db1c709c8fa9716458f797106b55ecd35afab408bd281b27e40",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_divide": {
        "code": "class TextSuite:\n    def time_divide(self):\n        Text(snippets.LOREM_IPSUM).divide(range(20, 100, 4))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_divide",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "64851da7a4fff5f7eedf5d6f18883aeb59a43decf556c31e627b6973bd1cc34e",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_divide_unicode_heavy": {
        "code": "class TextSuite:\n    def time_divide_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).divide(range(20, 100, 4))\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_divide_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "703b70a87fe0aa1599bb2e397e436f2387baf8cf7dcf349952df217899b97097",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_fit": {
        "code": "class TextSuite:\n    def time_fit(self):\n        Text(snippets.LOREM_IPSUM).fit(12)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_fit",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "8eab5a31717088de197d2d9f60d4e1658dbf3941e1afc4a378134fc8683c8bef",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_fit_unicode_heavy": {
        "code": "class TextSuite:\n    def time_fit_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).fit(12)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_fit_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "7154022579acd99d94691787cdf31162b15e38998dbc46d85250baacfdb339ef",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_indent_guides": {
        "code": "class TextSuite:\n    def time_indent_guides(self):\n        Text(snippets.PYTHON_SNIPPET).with_indent_guides()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_indent_guides",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "5a3722c26c96d1ef013e493ae4d2f99aa04f989ae6a8229123afd9d80f38a384",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_render": {
        "code": "class TextSuite:\n    def time_render(self):\n        Text(snippets.LOREM_IPSUM).render(self.console)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_render",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "28f30de133a59a0ae0c7e34075766a5a7e492acb6401c8ceb24b6d0c4002db53",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_render_unicode_heavy": {
        "code": "class TextSuite:\n    def time_render_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).render(self.console)\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_render_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "71f96ca5c6fe650b498a68a82f7268a1cd3d4b003a01d620fa0456b0827311e2",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_split": {
        "code": "class TextSuite:\n    def time_split(self):\n        Text(snippets.LOREM_IPSUM).split()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_split",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "8ced6624e81ea79c121959a499bd08a83578f32be271fce55bad42196ba221b7",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_split_unicode_heavy": {
        "code": "class TextSuite:\n    def time_split_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).split()\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_split_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "edcdec63428ba276875d287976df2ef6ea68e66a44dfe252a80eecd7705aa47d",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_wrapping": {
        "code": "class TextSuite:\n    def time_wrapping(self):\n        Text(snippets.LOREM_IPSUM).wrap(self.console, 12, overflow=\"fold\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_wrapping",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "7ee504db351412170e9e040a3c5f76a06ceb92b020dfd04c3d0ce3f2b7f5bc58",
        "warmup_time": -1
    },
    "benchmarks.TextSuite.time_wrapping_unicode_heavy": {
        "code": "class TextSuite:\n    def time_wrapping_unicode_heavy(self):\n        Text(snippets.UNICODE_HEAVY_TEXT).wrap(self.console, 12, overflow=\"fold\")\n\n    def setup(self):\n        self.console = Console(\n            file=StringIO(), color_system=\"truecolor\", legacy_windows=False\n        )\n        self.len_lorem_ipsum = len(snippets.LOREM_IPSUM)",
        "min_run_count": 2,
        "name": "benchmarks.TextSuite.time_wrapping_unicode_heavy",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4db4b38f51b05f4dc11b5a2908c118fe556a7d36b9e1d85fd18e28885a384db0",
        "warmup_time": -1
    },
    "version": 2
}